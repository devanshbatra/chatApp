{"version":3,"sources":["components/Chat.js","img/icon.png","components/chatInnner/Navigation.js","components/chatInnner/Sender.js","components/chatInnner/Msgmap.js","components/chatInnner/Messagebox.js","components/Join.js","App.js","reportWebVitals.js","index.js"],"names":["socket","Navigation","props","useState","userClass","setUserClass","toggleClass","setToggleClass","className","src","icon","alt","room","onClick","getusers","usersInRoom","map","user","name","indexOf","to","Sender","message","setMessage","sendMessage","onSubmit","e","type","placeholder","value","onChange","target","onKeyPress","key","Msgmap","trim","toLowerCase","reactEmoji","emojify","Messagebox","messages","element","text","Join","location","setName","setRoom","setMessages","setUsersInRoom","ENDPOINT","useEffect","queryString","parse","search","io","emit","console","log","on","users","off","event","preventDefault","App","path","exact","component","Chat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45e2fe45.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from 'socket.io-client';\r\nimport queryString from \"query-string\";\r\n\r\nimport Navigation from \"./chatInnner/Navigation\";\r\nimport Sender from \"./chatInnner/Sender\";\r\nimport Messagebox from \"./chatInnner/Messagebox\";\r\n\r\nlet socket;\r\n\r\nconst Join = ({ location }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [usersInRoom, setUsersInRoom] = useState([]);\r\n    const ENDPOINT = \"https://chatappserver1.herokuapp.com/\";\r\n\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search);\r\n        socket = io(ENDPOINT);\r\n        setName(name);\r\n        setRoom(room);\r\n        socket.emit(\"user-joined\", { name, room }, () => {\r\n            console.log(\"error\");\r\n        });\r\n        socket.on(\"roomdata\", (users) => {\r\n            setUsersInRoom(users);\r\n        });\r\n        return () => {\r\n            socket.emit(\"disconnection\");\r\n            socket.off();\r\n        }\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message\", (message) => {\r\n            setMessages([...messages, message]);\r\n        });\r\n        socket.on(\"roomdata\", (users) => {\r\n            setUsersInRoom(users);\r\n        });\r\n        return () => {\r\n            socket.off();\r\n        }\r\n    }, [messages]);\r\n\r\n    // For sending messages\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if (message) {\r\n            socket.emit(\"sendMessage\", message, () => {\r\n                setMessage(\"\");\r\n            });\r\n        }\r\n    }\r\n\r\n    // getting users info\r\n    const getusers = () => {\r\n        socket.on(\"roomdata\", (users) => {\r\n            setUsersInRoom(users);\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"inner-container\">\r\n            <Navigation room={room} usersInRoom={usersInRoom} getusers={getusers} />\r\n            <Messagebox messages={messages} name={name} />\r\n            <Sender message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Join;","export default __webpack_public_path__ + \"static/media/icon.bb23ad55.png\";","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport icon from \"../../img/icon.png\";\r\n\r\nconst Navigation=(props)=>{\r\n    const [userClass, setUserClass]=useState(\"\");\r\n    const [toggleClass, setToggleClass]=useState(\"\");\r\n    const animation=()=>{\r\n        if(userClass===\"show-users\"){\r\n            setUserClass(\"\");\r\n            setToggleClass(\"\");\r\n        }\r\n        else{\r\n            setUserClass(\"show-users\");\r\n            setToggleClass(\"toggle\");\r\n            props.getusers();\r\n        }\r\n    }\r\n    return(\r\n        <nav className=\"nav\">\r\n            <img src={icon} className=\"icon-img\" alt=\"icon\"/>\r\n            <h1 className=\"room-name\" >Room-{props.room}</h1>\r\n            <div className={`burger ${toggleClass}`} onClick={animation} >\r\n                <div className=\"line1\"></div>\r\n                <div className=\"line2\"></div>\r\n                <div className=\"line3\"></div>\r\n            </div>\r\n            <div className={`users ${userClass}`}>\r\n                <h4>MEMBERS</h4>\r\n                {props.usersInRoom.map(user=>(\r\n                    <p key={props.usersInRoom.indexOf(user)}>{user.name}</p>\r\n                ))}\r\n                \r\n                <Link to=\"/chatApp\" ><button className=\"leave-btn\" >Leave</button></Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Sender=({message, setMessage, sendMessage})=>{\r\n    \r\n    return(\r\n        <form className=\"sender-bar\" onSubmit={(e)=>{sendMessage(e)}}>\r\n            <input \r\n                type=\"text\"\r\n                className=\"sender-input\"\r\n                placeholder=\"Type a message here...\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' ? sendMessage(e) : null}\r\n            />\r\n            <button className=\"send-btn\" type=\"submit\" >Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Sender;","import React from \"react\";\r\nimport reactEmoji from \"react-emoji\";\r\n\r\nconst Msgmap=({message, user, name})=>{\r\n    let isCurrentuser;\r\n        let trimmedName = name.trim().toLowerCase();\r\n        if(trimmedName===user){\r\n            isCurrentuser=1;\r\n        }\r\n        else{\r\n            isCurrentuser=0;\r\n        }\r\n    return(\r\n        isCurrentuser\r\n        ?(\r\n            <div className=\"curr-msg\">{reactEmoji.emojify(message)}</div>\r\n        )\r\n        :(\r\n            <div className=\"other-msg\">\r\n                <h3>{user}</h3>\r\n                <p>{reactEmoji.emojify(message)}</p>\r\n            </div>\r\n        )\r\n                \r\n    );\r\n}\r\n\r\nexport default Msgmap;","import React from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport Msgmap from \"./Msgmap\";\r\n\r\nconst Messagebox = ({ messages, name }) => {\r\n\r\n    return (\r\n        <ScrollToBottom className=\"msg-box\">\r\n\r\n            {messages.map((element) => (\r\n                <Msgmap message={element.text} user={element.user} name={name} key={messages.indexOf(element)} />\r\n            ))}\r\n\r\n        </ScrollToBottom>\r\n    );\r\n}\r\n\r\nexport default Messagebox;","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Join = ()=>{\r\n    const [name, setName] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n\r\n    return(\r\n        <div className=\"inner-container-join\" >\r\n            <h1 className=\"app-name\" >Commutify</h1>\r\n            <h3 className=\"app-label\">Chat App</h3>\r\n            <div className=\"h-line\"></div>\r\n            <form className=\"joining-form\">\r\n                <input type=\"text\" placeholder='Your name here..' onChange={(e)=>{setName(e.target.value)}  } />\r\n                <input type=\"text\" placeholder='Your room here..' onChange={(e)=>{setRoom(e.target.value)}} />\r\n                <Link onClick={e=> (!name || !room) ? e.preventDefault() : null } to={`/chatApp/chat?name=${name}&room=${room}`}>\r\n                    <button type=\"submit\"className=\"send-btn join-btn\" >Sign In</button>\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Join;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Chat from \"./components/Chat\";\nimport Join from \"./components/Join\";\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n        <Router>\n          <Route path=\"/chatApp\" exact component={Join} />\n          <Route path=\"/chatApp/chat\" component={Chat} />\n        </Router>\n      </div>\n    </div>\n  );\n\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}